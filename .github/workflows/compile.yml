name: Build

on:
  workflow_call:
    inputs:
      PROJECT_NAME:
        type: string
        required: true
        default: "template"
      BUILD_64x:
        type: string
        required: true
        default: "false"
      BUILD_WINDOWS:
        type: string
        required: false
        default: "true"
      BUILD_LINUX:
        type: string
        required: false
        default: "true"
      REALM:
        type: string
        required: true
        default: "sv"
      FINAL_REALM:
        type: string
        required: true
        default: "sv"
      LINUX_FILEEXTENTION:
        type: string
        required: false
        default: "dll"

jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: debian:bullseye
    if: inputs.BUILD_LINUX == 'true'
    steps:
    - name: Install Dependencies
      run: |
        dpkg --add-architecture i386
        apt update
        apt install -y build-essential git libstdc++6:i386 gcc-multilib g++-multilib wget
    
    - uses: actions/checkout@v3
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        ref: master
        path: 'garrysmod_common'
        
    - name: Install Premake
      run: |
        wget https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta2/premake-5.0.0-beta2-linux.tar.gz -O premake.tar.gz
        tar -xvf premake.tar.gz --directory=/usr/bin
        gcc --version

    - name: Generate Project
      run: |
        premake5 --gmcommon=garrysmod_common gmake

    - name: Make
      run: |
        cd projects/linux/gmake
        make

    - uses: actions/upload-artifact@v2
      with:
        name: gm${{inputs.FINAL_REALM}}_${{inputs.PROJECT_NAME}}_linux.${{inputs.LINUX_FILEEXTENTION}}
        path: projects/linux/gmake/x86/ReleaseWithSymbols/gm${{inputs.REALM}}_${{inputs.PROJECT_NAME}}_linux.${{inputs.LINUX_FILEEXTENTION}}

  build-linux-64x:
    runs-on: ubuntu-latest
    container: debian:bullseye
    if: (inputs.BUILD_64x == 'true') && (inputs.BUILD_LINUX == 'true')
    steps:
    - name: Install Dependencies
      run: |
        dpkg --add-architecture i386
        apt update
        apt install -y build-essential git libstdc++6:i386 gcc-multilib g++-multilib wget
    
    - uses: actions/checkout@v3
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        ref: x86-64-support-sourcesdk
        path: 'garrysmod_common'
        
    - name: Install Premake
      run: |
        wget https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta2/premake-5.0.0-beta2-linux.tar.gz -O premake.tar.gz
        tar -xvf premake.tar.gz --directory=/usr/bin
        gcc --version

    - name: Generate Project
      run: |
        premake5 --gmcommon=garrysmod_common gmake

    - name: Make 64x
      run: |
        cd projects/linux/gmake
        make config=releasewithsymbols_x86_64

    - uses: actions/upload-artifact@v2
      with:
        name: gm${{inputs.FINAL_REALM}}_${{inputs.PROJECT_NAME}}_linux64.${{inputs.LINUX_FILEEXTENTION}}
        path: projects/linux/gmake/x86_64/ReleaseWithSymbols/gm${{inputs.REALM}}_${{inputs.PROJECT_NAME}}_linux64.${{inputs.LINUX_FILEEXTENTION}}

  build-windows:
    runs-on: windows-2019
    if: inputs.BUILD_WINDOWS == 'true'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        path: 'garrysmod_common'
        ref: master

    - name: Install Premake
      run: |
         curl -L https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta2/premake-5.0.0-beta2-windows.zip -o premake.zip
         tar -xf premake.zip

    - name: Generate Project
      run: |
        ./premake5.exe --gmcommon=garrysmod_common vs2019

    - name: Build
      run: |
        cd projects/windows/vs2019
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=ReleaseWithSymbols /p:Platform=Win32 ${{inputs.PROJECT_NAME}}.sln

    - uses: actions/upload-artifact@v2
      with:
        name: gm${{inputs.FINAL_REALM}}_${{inputs.PROJECT_NAME}}_win32.dll
        path: projects/windows/vs2019/x86/ReleaseWithSymbols/gm${{inputs.REALM}}_${{inputs.PROJECT_NAME}}_win32.dll

  build-windows-64x:
    runs-on: windows-2019
    if: (inputs.BUILD_64x == 'true') && (inputs.BUILD_WINDOWS == 'true')
    steps:
    - uses: actions/checkout@v2
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        repository: danielga/garrysmod_common
        path: 'garrysmod_common'
        ref: x86-64-support-sourcesdk

    - name: Install Premake
      run: |
         curl -L https://github.com/danielga/garrysmod_common/releases/download/premake-build%2F5.0.0-beta2/premake-5.0.0-beta2-windows.zip -o premake.zip
         tar -xf premake.zip

    - name: Generate Project
      run: |
        ./premake5.exe --gmcommon=garrysmod_common vs2019

    - name: Build
      run: |
        cd projects/windows/vs2019
        & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=ReleaseWithSymbols /p:Platform=x64 ${{inputs.PROJECT_NAME}}.sln

    - uses: actions/upload-artifact@v2
      with:
        name: gm${{inputs.FINAL_REALM}}_${{inputs.PROJECT_NAME}}_win64.dll
        path: projects/windows/vs2019/x86_64/ReleaseWithSymbols/gm${{inputs.REALM}}_${{inputs.PROJECT_NAME}}_win64.dll